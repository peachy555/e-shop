{"ast":null,"code":"var _jsxFileName = \"/Users/peachtuntiwong/projects/e-shop/src/features/product-listing/index.js\";\nimport React from 'react';\nimport ProductListItem from './product-list-item';\nimport { connect } from 'react-redux';\nimport fetchApi from '../../modules/fetch-api';\n\nclass ProductListing extends React.Component {\n  componentDidMount() {\n    const loadProducts = this.props.loadProducts;\n    fetchApi('get', 'https://raw.githubusercontent.com/peachy555/e-shop/master/src/data/products.json').then(json => {\n      loadProducts(json);\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          addToCart = _this$props.addToCart,\n          removeFromCart = _this$props.removeFromCart,\n          products = _this$props.products,\n          cart = _this$props.cart;\n    return React.createElement(\"div\", {\n      className: \"product-listing\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, products.map(product => React.createElement(ProductListItem, {\n      product: product,\n      addToCart: addToCart,\n      removeFromCart: removeFromCart,\n      cartItem: cart.filter(cartItem => cartItem.id === product.id)[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cart: state.cart,\n    products: state.products\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    loadProducts: products => {\n      dispatch({\n        type: 'LOAD',\n        payload: products\n      });\n    },\n    addToCart: item => {\n      dispatch({\n        type: 'ADD',\n        payload: item\n      });\n    },\n    removeFromCart: item => {\n      dispatch({\n        type: 'REMOVE',\n        payload: item\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListing);","map":{"version":3,"sources":["/Users/peachtuntiwong/projects/e-shop/src/features/product-listing/index.js"],"names":["React","ProductListItem","connect","fetchApi","ProductListing","Component","componentDidMount","loadProducts","props","then","json","render","addToCart","removeFromCart","products","cart","map","product","filter","cartItem","id","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,QAAP,MAAqB,yBAArB;;AAEA,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAA6C;AAC5CC,EAAAA,iBAAiB,GAAG;AAAA,UACXC,YADW,GACM,KAAKC,KADX,CACXD,YADW;AAEnBJ,IAAAA,QAAQ,CAAC,KAAD,EAAQ,kFAAR,CAAR,CACCM,IADD,CACOC,IAAI,IAAI;AACdH,MAAAA,YAAY,CAACG,IAAD,CAAZ;AACA,KAHD;AAIA;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKH,KADnD;AAAA,UACAI,SADA,eACAA,SADA;AAAA,UACWC,cADX,eACWA,cADX;AAAA,UAC2BC,QAD3B,eAC2BA,QAD3B;AAAA,UACqCC,IADrC,eACqCA,IADrC;AAGR,WAAO;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEND,QAAQ,CAACE,GAAT,CAAcC,OAAO,IACpB,oBAAC,eAAD;AACA,MAAA,OAAO,EAAEA,OADT;AAEA,MAAA,SAAS,EAAEL,SAFX;AAGA,MAAA,cAAc,EAAEC,cAHhB;AAIA,MAAA,QAAQ,EAAEE,IAAI,CAACG,MAAL,CAAYC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBH,OAAO,CAACG,EAAhD,EAAoD,CAApD,CAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFM,CAAP;AAWA;;AAvB2C;;AA0B7C,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,SAAO;AACNP,IAAAA,IAAI,EAAEO,KAAK,CAACP,IADN;AAEND,IAAAA,QAAQ,EAAEQ,KAAK,CAACR;AAFV,GAAP;AAIA;;AAED,SAASS,kBAAT,CAA4BC,QAA5B,EAAsC;AACrC,SAAO;AACNjB,IAAAA,YAAY,EAAGO,QAAD,IAAc;AAC3BU,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,OAAO,EAAEZ;AAAzB,OAAD,CAAR;AACA,KAHK;AAINF,IAAAA,SAAS,EAAGe,IAAD,IAAU;AACpBH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,KAAR;AAAeC,QAAAA,OAAO,EAAEC;AAAxB,OAAD,CAAR;AACA,KANK;AAONd,IAAAA,cAAc,EAAGc,IAAD,IAAU;AACzBH,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,OAAO,EAAEC;AAA3B,OAAD,CAAR;AACA;AATK,GAAP;AAWA;;AAED,eAAezB,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,cAA7C,CAAf","sourcesContent":["import React from 'react'\nimport ProductListItem from './product-list-item'\nimport { connect } from 'react-redux'\n\nimport fetchApi from '../../modules/fetch-api'\n\nclass ProductListing extends React.Component {\n\tcomponentDidMount() {\n\t\tconst { loadProducts } = this.props\n\t\tfetchApi('get', 'https://raw.githubusercontent.com/peachy555/e-shop/master/src/data/products.json')\n\t\t.then((json => {\n\t\t\tloadProducts(json)\n\t\t}))\n\t}\n\n\trender() {\n\t\tconst { addToCart, removeFromCart, products, cart } = this.props\n\n\t\treturn <div className='product-listing'>\n\t\t{\n\t\t\tproducts.map( product =>\n\t\t\t\t<ProductListItem\n\t\t\t\tproduct={product}\n\t\t\t\taddToCart={addToCart}\n\t\t\t\tremoveFromCart={removeFromCart}\n\t\t\t\tcartItem={cart.filter(cartItem => cartItem.id === product.id)[0]}\n\t\t\t\t/>)\n\t\t}\n\t\t</div>\n\t}\n}\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tcart: state.cart,\n\t\tproducts: state.products,\n\t}\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\t\tloadProducts: (products) => {\n\t\t\tdispatch({ type: 'LOAD', payload: products })\n\t\t},\n\t\taddToCart: (item) => {\n\t\t\tdispatch({ type: 'ADD', payload: item })\n\t\t},\n\t\tremoveFromCart: (item) => {\n\t\t\tdispatch({ type: 'REMOVE', payload: item })\n\t\t}\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductListing)"]},"metadata":{},"sourceType":"module"}